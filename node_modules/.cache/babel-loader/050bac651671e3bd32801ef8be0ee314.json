{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0414\\u043C\\u0438\\u0442\\u0440\\u0438\\u0439\\\\Desktop\\\\Javascript\\\\Vladilen\\\\\\u041C\\u043E\\u0434\\u0443\\u043B\\u044C 2\\\\hooks\\\\src\\\\app\\\\components\\\\page\\\\editUserPage\\\\editUserPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport api from \"../../../api\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditUserPage = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    profession: \"\"\n  });\n  const [professions, setProfession] = useState([]);\n  const [qualities, setQualities] = useState({});\n  const [errors, setErrors] = useState({});\n  const getProfessionById = id => {\n    for (const prof in professions) {\n      const profData = professions[prof];\n      if (profData._id === id) return profData;\n    }\n  };\n  const getQualities = elements => {\n    const qualitiesArray = [];\n    for (const elem of elements) {\n      for (const quality in qualities) {\n        if (elem.value === qualities[quality]._id) {\n          qualitiesArray.push(qualities[quality]);\n        }\n      }\n    }\n    return qualitiesArray;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const {\n      profession,\n      qualities\n    } = data;\n    api.users.update(userId, {\n      ...data,\n      profession: getProfessionById(profession),\n      qualities: getQualities(qualities)\n    }).then(data => history.push(`/users/${data._id}`));\n    console.log(data);\n  };\n  const transformData = data => {\n    return data.map(qual => ({\n      label: qual.name,\n      value: qual._id\n    }));\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    api.users.getById(userId).then(_ref => {\n      let {\n        profession,\n        qualities,\n        ...data\n      } = _ref;\n      return setData(prevState => ({\n        ...prevState,\n        ...data,\n        qualities: transformData(qualities),\n        profession: profession._id\n      }));\n    });\n    api.qualities.fetchAll().then(data => setQualities(data));\n    api.professions.fetchAll().then(data => setProfession(data));\n  }, []);\n  useEffect(() => {\n    if (data._id) setIsLoading(false);\n  }, [data]);\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    name: {\n      isRequired: {\n        message: \"Введите ваше имя\"\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n  const handleChange = target => {\n    setData(prevState => ({\n      ...prevState,\n      [target.name]: target.value\n    }));\n  };\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const isValid = Object.keys(errors).length === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3 shadow p-4\",\n        children: !isLoading && Object.keys(professions).length > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u0418\\u043C\\u044F\",\n            name: \"name\",\n            value: data.name,\n            onChange: handleChange,\n            error: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n            name: \"email\",\n            value: data.email,\n            onChange: handleChange,\n            error: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\",\n            defaultOption: \"Choose...\",\n            options: professions,\n            name: \"profession\",\n            onChange: handleChange,\n            value: data.profession,\n            error: errors.profession\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !isValid,\n            className: \"btn btn-primary w-100 mx-auto\",\n            children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this) : \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(EditUserPage, \"DOrhXWLUMKiNnB7u8GHkPFJDolM=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = EditUserPage;\nexport default EditUserPage;\nvar _c;\n$RefreshReg$(_c, \"EditUserPage\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","validator","api","TextField","SelectField","EditUserPage","userId","history","isLoading","setIsLoading","data","setData","name","email","profession","professions","setProfession","qualities","setQualities","errors","setErrors","getProfessionById","id","prof","profData","_id","getQualities","elements","qualitiesArray","elem","quality","value","push","handleSubmit","e","preventDefault","isValid","validate","users","update","then","console","log","transformData","map","qual","label","getById","prevState","fetchAll","validatorConfig","isRequired","message","isEmail","handleChange","target","Object","keys","length"],"sources":["C:/Users/Дмитрий/Desktop/Javascript/Vladilen/Модуль 2/hooks/src/app/components/page/editUserPage/editUserPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport api from \"../../../api\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\n\nconst EditUserPage = () => {\n    const { userId } = useParams();\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(false);\n    const [data, setData] = useState({\n        name: \"\",\n        email: \"\",\n        profession: \"\"\n    });\n    const [professions, setProfession] = useState([]);\n    const [qualities, setQualities] = useState({});\n    const [errors, setErrors] = useState({});\n    const getProfessionById = (id) => {\n        for (const prof in professions) {\n            const profData = professions[prof];\n            if (profData._id === id) return profData;\n        }\n    };\n    const getQualities = (elements) => {\n        const qualitiesArray = [];\n        for (const elem of elements) {\n            for (const quality in qualities) {\n                if (elem.value === qualities[quality]._id) {\n                    qualitiesArray.push(qualities[quality]);\n                }\n            }\n        }\n        return qualitiesArray;\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const { profession, qualities } = data;\n        api.users\n            .update(userId, {\n                ...data,\n                profession: getProfessionById(profession),\n                qualities: getQualities(qualities)\n            })\n            .then((data) => history.push(`/users/${data._id}`));\n        console.log(data);\n    };\n    const transformData = (data) => {\n        return data.map((qual) => ({ label: qual.name, value: qual._id }));\n    };\n    useEffect(() => {\n        setIsLoading(true);\n        api.users.getById(userId).then(({ profession, qualities, ...data }) =>\n            setData((prevState) => ({\n                ...prevState,\n                ...data,\n                qualities: transformData(qualities),\n                profession: profession._id\n            }))\n        );\n        api.qualities.fetchAll().then((data) => setQualities(data));\n        api.professions.fetchAll().then((data) => setProfession(data));\n    }, []);\n    useEffect(() => {\n        if (data._id) setIsLoading(false);\n    }, [data]);\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Введите ваше имя\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {!isLoading && Object.keys(professions).length > 0 ? (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                label=\"Имя\"\n                                name=\"name\"\n                                value={data.name}\n                                onChange={handleChange}\n                                error={errors.name}\n                            />\n                            <TextField\n                                label=\"Электронная почта\"\n                                name=\"email\"\n                                value={data.email}\n                                onChange={handleChange}\n                                error={errors.email}\n                            />\n                            <SelectField\n                                label=\"Выбери свою профессию\"\n                                defaultOption=\"Choose...\"\n                                options={professions}\n                                name=\"profession\"\n                                onChange={handleChange}\n                                value={data.profession}\n                                error={errors.profession}\n                            />\n                            <button\n                                type=\"submit\"\n                                disabled={!isValid}\n                                className=\"btn btn-primary w-100 mx-auto\"\n                            >\n                                Обновить\n                            </button>\n                        </form>\n                    ) : (\n                        \"Loading...\"\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditUserPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}