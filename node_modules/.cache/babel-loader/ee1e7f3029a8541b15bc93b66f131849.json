{"ast":null,"code":"export default function validator(data, config) {\n  const errors = {};\n  function validate(validateMethod, data, config) {\n    let statusValidate;\n    switch (validateMethod) {\n      case \"isRequired\":\n        {\n          if (typeof data === \"boolean\") {\n            statusValidate = !data;\n          } else {\n            statusValidate = data.trim() === \"\";\n          }\n          break;\n        }\n      case \"isEmail\":\n        {\n          const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n          statusValidate = !emailRegExp.test(data);\n          break;\n        }\n      case \"isCapitalSymbol\":\n        {\n          const capitalRegExp = /[A-Z]+/g;\n          statusValidate = !capitalRegExp.test(data);\n          break;\n        }\n      case \"isContainDigit\":\n        {\n          const digitRegExp = /\\d+/g;\n          statusValidate = !digitRegExp.test(data);\n          break;\n        }\n      case \"min\":\n        {\n          statusValidate = data.length < config.value;\n          break;\n        }\n      default:\n        break;\n    }\n    if (statusValidate) return config.message;\n  }\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(validateMethod, data[fieldName], config[fieldName][validateMethod]);\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error;\n      }\n    }\n  }\n  return errors;\n}","map":{"version":3,"names":["validator","data","config","errors","validate","validateMethod","statusValidate","trim","emailRegExp","test","capitalRegExp","digitRegExp","length","value","message","fieldName","error"],"sources":["C:/Users/Дмитрий/Desktop/Javascript/Vladilen/Модуль 2/hooks/src/app/utils/validator.js"],"sourcesContent":["export default function validator(data, config) {\n  const errors = {};\n  function validate(validateMethod, data, config) {\n    let statusValidate;\n    switch (validateMethod) {\n      case \"isRequired\": {\n        if (typeof data === \"boolean\") {\n          statusValidate = !data;\n        } else {\n          statusValidate = data.trim() === \"\";\n        }\n        break;\n      }\n      case \"isEmail\": {\n        const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n        statusValidate = !emailRegExp.test(data);\n        break;\n      }\n      case \"isCapitalSymbol\": {\n        const capitalRegExp = /[A-Z]+/g;\n        statusValidate = !capitalRegExp.test(data);\n        break;\n      }\n      case \"isContainDigit\": {\n        const digitRegExp = /\\d+/g;\n        statusValidate = !digitRegExp.test(data);\n        break;\n      }\n      case \"min\": {\n        statusValidate = data.length < config.value;\n        break;\n      }\n      default:\n        break;\n    }\n    if (statusValidate) return config.message;\n  }\n  for (const fieldName in data) {\n    for (const validateMethod in config[fieldName]) {\n      const error = validate(\n        validateMethod,\n        data[fieldName],\n        config[fieldName][validateMethod]\n      );\n      if (error && !errors[fieldName]) {\n        errors[fieldName] = error;\n      }\n    }\n  }\n  return errors;\n}\n"],"mappings":"AAAA,eAAe,SAASA,SAAS,CAACC,IAAI,EAAEC,MAAM,EAAE;EAC9C,MAAMC,MAAM,GAAG,CAAC,CAAC;EACjB,SAASC,QAAQ,CAACC,cAAc,EAAEJ,IAAI,EAAEC,MAAM,EAAE;IAC9C,IAAII,cAAc;IAClB,QAAQD,cAAc;MACpB,KAAK,YAAY;QAAE;UACjB,IAAI,OAAOJ,IAAI,KAAK,SAAS,EAAE;YAC7BK,cAAc,GAAG,CAACL,IAAI;UACxB,CAAC,MAAM;YACLK,cAAc,GAAGL,IAAI,CAACM,IAAI,EAAE,KAAK,EAAE;UACrC;UACA;QACF;MACA,KAAK,SAAS;QAAE;UACd,MAAMC,WAAW,GAAG,iBAAiB;UACrCF,cAAc,GAAG,CAACE,WAAW,CAACC,IAAI,CAACR,IAAI,CAAC;UACxC;QACF;MACA,KAAK,iBAAiB;QAAE;UACtB,MAAMS,aAAa,GAAG,SAAS;UAC/BJ,cAAc,GAAG,CAACI,aAAa,CAACD,IAAI,CAACR,IAAI,CAAC;UAC1C;QACF;MACA,KAAK,gBAAgB;QAAE;UACrB,MAAMU,WAAW,GAAG,MAAM;UAC1BL,cAAc,GAAG,CAACK,WAAW,CAACF,IAAI,CAACR,IAAI,CAAC;UACxC;QACF;MACA,KAAK,KAAK;QAAE;UACVK,cAAc,GAAGL,IAAI,CAACW,MAAM,GAAGV,MAAM,CAACW,KAAK;UAC3C;QACF;MACA;QACE;IAAM;IAEV,IAAIP,cAAc,EAAE,OAAOJ,MAAM,CAACY,OAAO;EAC3C;EACA,KAAK,MAAMC,SAAS,IAAId,IAAI,EAAE;IAC5B,KAAK,MAAMI,cAAc,IAAIH,MAAM,CAACa,SAAS,CAAC,EAAE;MAC9C,MAAMC,KAAK,GAAGZ,QAAQ,CACpBC,cAAc,EACdJ,IAAI,CAACc,SAAS,CAAC,EACfb,MAAM,CAACa,SAAS,CAAC,CAACV,cAAc,CAAC,CAClC;MACD,IAAIW,KAAK,IAAI,CAACb,MAAM,CAACY,SAAS,CAAC,EAAE;QAC/BZ,MAAM,CAACY,SAAS,CAAC,GAAGC,KAAK;MAC3B;IACF;EACF;EACA,OAAOb,MAAM;AACf"},"metadata":{},"sourceType":"module"}