{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0414\\u043C\\u0438\\u0442\\u0440\\u0438\\u0439\\\\Desktop\\\\Javascript\\\\Vladilen\\\\\\u041C\\u043E\\u0434\\u0443\\u043B\\u044C 2\\\\hooks\\\\src\\\\app\\\\components\\\\page\\\\editUserPage\\\\editUserPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport api from \"../../../api\";\nimport FormComponent, { TextField, SelectField } from \"../../common/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditUserPage = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    profession: \"\"\n  });\n  const [professions, setProfession] = useState([]);\n  const getProfessionById = id => {\n    for (const prof in professions) {\n      const profData = professions[prof];\n      if (profData._id === id) return profData;\n    }\n  };\n  const handleSubmit = data => {\n    const {\n      profession\n    } = data;\n    api.users.update(userId, {\n      ...data,\n      profession: getProfessionById(profession)\n    }).then(data => history.push(`/users/${data._id}`));\n    console.log(data);\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    api.users.getById(userId).then(_ref => {\n      let {\n        profession,\n        ...data\n      } = _ref;\n      return setData(prevState => ({\n        ...prevState,\n        ...data,\n        profession: profession._id\n      }));\n    });\n    api.professions.fetchAll().then(data => setProfession(data));\n  }, []);\n  useEffect(() => {\n    if (data._id) setIsLoading(false);\n  }, [data]);\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    name: {\n      isRequired: {\n        message: \"Введите ваше имя\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3 shadow p-4\",\n        children: !isLoading && Object.keys(professions).length > 0 ? /*#__PURE__*/_jsxDEV(FormComponent, {\n          onSubmit: handleSubmit,\n          validatorConfig: validatorConfig,\n          defaultData: data,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u0418\\u043C\\u044F\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\",\n            defaultOption: \"Choose...\",\n            options: professions,\n            name: \"profession\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100 mx-auto\",\n            children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this) : \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(EditUserPage, \"Vsv0OuLKLASTcryTH8i+ehQN5D0=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = EditUserPage;\nexport default EditUserPage;\nvar _c;\n$RefreshReg$(_c, \"EditUserPage\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","api","FormComponent","TextField","SelectField","EditUserPage","userId","history","isLoading","setIsLoading","data","setData","name","email","profession","professions","setProfession","getProfessionById","id","prof","profData","_id","handleSubmit","users","update","then","push","console","log","getById","prevState","fetchAll","validatorConfig","isRequired","message","isEmail","Object","keys","length"],"sources":["C:/Users/Дмитрий/Desktop/Javascript/Vladilen/Модуль 2/hooks/src/app/components/page/editUserPage/editUserPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport api from \"../../../api\";\nimport FormComponent, { TextField, SelectField } from \"../../common/form\";\n\nconst EditUserPage = () => {\n  const { userId } = useParams();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    profession: \"\",\n  });\n  const [professions, setProfession] = useState([]);\n\n  const getProfessionById = (id) => {\n    for (const prof in professions) {\n      const profData = professions[prof];\n      if (profData._id === id) return profData;\n    }\n  };\n\n  const handleSubmit = (data) => {\n    const { profession } = data;\n    api.users\n      .update(userId, {\n        ...data,\n        profession: getProfessionById(profession),\n      })\n      .then((data) => history.push(`/users/${data._id}`));\n    console.log(data);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    api.users.getById(userId).then(({ profession, ...data }) =>\n      setData((prevState) => ({\n        ...prevState,\n        ...data,\n        profession: profession._id,\n      }))\n    );\n    api.professions.fetchAll().then((data) => setProfession(data));\n  }, []);\n\n  useEffect(() => {\n    if (data._id) setIsLoading(false);\n  }, [data]);\n\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\",\n      },\n      isEmail: {\n        message: \"Email введен некорректно\",\n      },\n    },\n    name: {\n      isRequired: {\n        message: \"Введите ваше имя\",\n      },\n    },\n  };\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\n          {!isLoading && Object.keys(professions).length > 0 ? (\n            <FormComponent\n              onSubmit={handleSubmit}\n              validatorConfig={validatorConfig}\n              defaultData={data}\n            >\n              <TextField label=\"Имя\" name=\"name\" />\n              <TextField label=\"Электронная почта\" name=\"email\" />\n              <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                options={professions}\n                name=\"profession\"\n              />\n              <button type=\"submit\" className=\"btn btn-primary w-100 mx-auto\">\n                Обновить\n              </button>\n            </FormComponent>\n          ) : (\n            \"Loading...\"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditUserPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}