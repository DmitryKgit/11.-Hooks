{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0414\\u043C\\u0438\\u0442\\u0440\\u0438\\u0439\\\\Desktop\\\\Javascript\\\\Vladilen\\\\\\u041C\\u043E\\u0434\\u0443\\u043B\\u044C 2\\\\hooks\\\\src\\\\app\\\\components\\\\examples\\\\cloneElement\\\\cloneElementExample.jsx\";\nimport React from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport TextField from \"../../common/form/textField\";\nimport SmallTitle from \"../../common/typografy/smallTitle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CloneElementExample = () => {\n  const field = /*#__PURE__*/_jsxDEV(TextField, {\n    label: \"email\",\n    name: \"email\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 17\n  }, this);\n  const handleChange = target => {\n    console.log(\"change\", target);\n  };\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(SmallTitle, {\n      children: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), field, /*#__PURE__*/React.cloneElement(field, {\n      onChange: handleChange,\n      label: \"cloned email\"\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = CloneElementExample;\nexport default CloneElementExample;\nvar _c;\n$RefreshReg$(_c, \"CloneElementExample\");","map":{"version":3,"names":["React","CardWrapper","TextField","SmallTitle","CloneElementExample","field","handleChange","target","console","log","cloneElement","onChange","label"],"sources":["C:/Users/Дмитрий/Desktop/Javascript/Vladilen/Модуль 2/hooks/src/app/components/examples/cloneElement/cloneElementExample.jsx"],"sourcesContent":["import React from \"react\";\nimport CardWrapper from \"../../common/Card\";\nimport TextField from \"../../common/form/textField\";\n\nimport SmallTitle from \"../../common/typografy/smallTitle\";\nconst CloneElementExample = () => {\n  const field = <TextField label=\"email\" name=\"email\" />;\n\n  const handleChange = (target) => {\n    console.log(\"change\", target);\n  };\n\n  return (\n    <CardWrapper>\n      <SmallTitle>Пример</SmallTitle>\n      {field}\n      {React.cloneElement(field, {\n        onChange: handleChange,\n        label: \"cloned email\",\n      })}\n    </CardWrapper>\n  );\n};\n\nexport default CloneElementExample;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,SAAS,MAAM,6BAA6B;AAEnD,OAAOC,UAAU,MAAM,mCAAmC;AAAC;AAC3D,MAAMC,mBAAmB,GAAG,MAAM;EAChC,MAAMC,KAAK,gBAAG,QAAC,SAAS;IAAC,KAAK,EAAC,OAAO;IAAC,IAAI,EAAC;EAAO;IAAA;IAAA;IAAA;EAAA,QAAG;EAEtD,MAAMC,YAAY,GAAIC,MAAM,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,MAAM,CAAC;EAC/B,CAAC;EAED,oBACE,QAAC,WAAW;IAAA,wBACV,QAAC,UAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,EAC9BF,KAAK,eACLL,KAAK,CAACU,YAAY,CAACL,KAAK,EAAE;MACzBM,QAAQ,EAAEL,YAAY;MACtBM,KAAK,EAAE;IACT,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACU;AAElB,CAAC;AAAC,KAjBIR,mBAAmB;AAmBzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}