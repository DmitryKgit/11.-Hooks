{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0414\\u043C\\u0438\\u0442\\u0440\\u0438\\u0439\\\\Desktop\\\\Javascript\\\\Vladilen\\\\\\u041C\\u043E\\u0434\\u0443\\u043B\\u044C 2\\\\hooks\\\\src\\\\app\\\\components\\\\page\\\\editUserPage\\\\editUserPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport api from \"../../../api\";\nimport { TextField, SelectField } from \"../../common/form/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditUserPage = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    profession: \"\"\n  });\n  const [professions, setProfession] = useState([]);\n  const [qualities, setQualities] = useState({});\n  const [errors, setErrors] = useState({});\n  const getProfessionById = id => {\n    for (const prof in professions) {\n      const profData = professions[prof];\n      if (profData._id === id) return profData;\n    }\n  };\n  const getQualities = elements => {\n    const qualitiesArray = [];\n    for (const elem of elements) {\n      for (const quality in qualities) {\n        if (elem.value === qualities[quality]._id) {\n          qualitiesArray.push(qualities[quality]);\n        }\n      }\n    }\n    return qualitiesArray;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const {\n      profession,\n      qualities\n    } = data;\n    api.users.update(userId, {\n      ...data,\n      profession: getProfessionById(profession),\n      qualities: getQualities(qualities)\n    }).then(data => history.push(`/users/${data._id}`));\n    console.log(data);\n  };\n  const transformData = data => {\n    return data.map(qual => ({\n      label: qual.name,\n      value: qual._id\n    }));\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    api.users.getById(userId).then(_ref => {\n      let {\n        profession,\n        qualities,\n        ...data\n      } = _ref;\n      return setData(prevState => ({\n        ...prevState,\n        ...data,\n        qualities: transformData(qualities),\n        profession: profession._id\n      }));\n    });\n    api.qualities.fetchAll().then(data => setQualities(data));\n    api.professions.fetchAll().then(data => setProfession(data));\n  }, []);\n  useEffect(() => {\n    if (data._id) setIsLoading(false);\n  }, [data]);\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    name: {\n      isRequired: {\n        message: \"Введите ваше имя\"\n      }\n    }\n  };\n  const isValid = Object.keys(errors).length === 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3 shadow p-4\",\n        children: !isLoading && Object.keys(professions).length > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u0418\\u043C\\u044F\",\n            name: \"name\",\n            value: data.name,\n            onChange: handleChange,\n            error: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n            name: \"email\",\n            value: data.email,\n            onChange: handleChange,\n            error: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n            label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\",\n            defaultOption: \"Choose...\",\n            options: professions,\n            name: \"profession\",\n            onChange: handleChange,\n            value: data.profession,\n            error: errors.profession\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: !isValid,\n            className: \"btn btn-primary w-100 mx-auto\",\n            children: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this) : \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(EditUserPage, \"z2l6Qbr4REeAY1xOKwx4s9NCeGI=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = EditUserPage;\nexport default EditUserPage;\nvar _c;\n$RefreshReg$(_c, \"EditUserPage\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","validator","api","TextField","SelectField","EditUserPage","userId","history","isLoading","setIsLoading","data","setData","name","email","profession","professions","setProfession","qualities","setQualities","errors","setErrors","getProfessionById","id","prof","profData","_id","getQualities","elements","qualitiesArray","elem","quality","value","push","handleSubmit","e","preventDefault","isValid","validate","users","update","then","console","log","transformData","map","qual","label","getById","prevState","fetchAll","validatorConfig","isRequired","message","isEmail","Object","keys","length","handleChange"],"sources":["C:/Users/Дмитрий/Desktop/Javascript/Vladilen/Модуль 2/hooks/src/app/components/page/editUserPage/editUserPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport api from \"../../../api\";\nimport { TextField, SelectField } from \"../../common/form/\";\n\nconst EditUserPage = () => {\n  const { userId } = useParams();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState({\n    name: \"\",\n    email: \"\",\n    profession: \"\",\n  });\n  const [professions, setProfession] = useState([]);\n  const [qualities, setQualities] = useState({});\n  const [errors, setErrors] = useState({});\n  const getProfessionById = (id) => {\n    for (const prof in professions) {\n      const profData = professions[prof];\n      if (profData._id === id) return profData;\n    }\n  };\n  const getQualities = (elements) => {\n    const qualitiesArray = [];\n    for (const elem of elements) {\n      for (const quality in qualities) {\n        if (elem.value === qualities[quality]._id) {\n          qualitiesArray.push(qualities[quality]);\n        }\n      }\n    }\n    return qualitiesArray;\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const { profession, qualities } = data;\n    api.users\n      .update(userId, {\n        ...data,\n        profession: getProfessionById(profession),\n        qualities: getQualities(qualities),\n      })\n      .then((data) => history.push(`/users/${data._id}`));\n    console.log(data);\n  };\n  const transformData = (data) => {\n    return data.map((qual) => ({ label: qual.name, value: qual._id }));\n  };\n  useEffect(() => {\n    setIsLoading(true);\n    api.users.getById(userId).then(({ profession, qualities, ...data }) =>\n      setData((prevState) => ({\n        ...prevState,\n        ...data,\n        qualities: transformData(qualities),\n        profession: profession._id,\n      }))\n    );\n    api.qualities.fetchAll().then((data) => setQualities(data));\n    api.professions.fetchAll().then((data) => setProfession(data));\n  }, []);\n  useEffect(() => {\n    if (data._id) setIsLoading(false);\n  }, [data]);\n\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\",\n      },\n      isEmail: {\n        message: \"Email введен некорректно\",\n      },\n    },\n    name: {\n      isRequired: {\n        message: \"Введите ваше имя\",\n      },\n    },\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"row\">\n        <div className=\"col-md-6 offset-md-3 shadow p-4\">\n          {!isLoading && Object.keys(professions).length > 0 ? (\n            <form onSubmit={handleSubmit}>\n              <TextField\n                label=\"Имя\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n              />\n              <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n              />\n              <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                options={professions}\n                name=\"profession\"\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n              />\n              <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n              >\n                Обновить\n              </button>\n            </form>\n          ) : (\n            \"Loading...\"\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EditUserPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}